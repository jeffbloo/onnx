// Copyright (c) Facebook Inc. and Microsoft Corporation.
// Licensed under the MIT license.

#include "onnx/defs/schema.h"

namespace ONNX_NAMESPACE {

// Forward declarations for ai.onnx version 1
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ATen);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Abs);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Add);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Affine);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, And);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ArgMax);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ArgMin);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, AveragePool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, BatchNormalization);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Cast);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Ceil);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Clip);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Concat);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Constant);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ConstantFill);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Conv);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ConvTranspose);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Crop);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, DepthToSpace);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Div);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Dropout);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Elu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Equal);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Exp);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, FC);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Flatten);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Floor);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GRU);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GRUUnit);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Gather);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Gemm);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GivenTensorFill);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GlobalAveragePool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GlobalLpPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GlobalMaxPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Greater);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, HardSigmoid);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Hardmax);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Identity);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, If);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ImageScaler);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, InstanceNormalization);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LRN);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LSTM);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LeakyRelu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Less);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Log);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LogSoftmax);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Loop);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LoopIndexTensor);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LpNormalization);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LpPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MatMul);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Max);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MaxPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MaxRoiPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Mean);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MeanVarianceNormalization);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Min);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Mul);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Neg);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Not);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Or);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, PRelu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Pad);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ParametricSoftplus);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Pow);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RNN);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomNormal);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomNormalLike);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomUniform);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomUniformLike);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Reciprocal);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceL1);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceL2);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceLogSum);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceLogSumExp);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceMax);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceMean);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceMin);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceProd);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceSum);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceSumSquare);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Relu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Reshape);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Scale);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ScaledTanh);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Selu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Shape);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sigmoid);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Size);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Slice);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Softmax);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Softplus);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Softsign);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, SpaceToDepth);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Split);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sqrt);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Squeeze);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sub);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sum);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Tanh);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ThresholdedRelu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Tile);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, TopK);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Transpose);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Unsqueeze);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Upsample);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Xor);

// Iterate over schema from ai.onnx version 1
class OpSet_ONNX_DOMAIN_ver1 {
  public:
    static void ForEachSchema(std::function<void(OpSchema &&)> fn){
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ATen)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Abs)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Add)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Affine)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, And)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ArgMax)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ArgMin)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, AveragePool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, BatchNormalization)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Cast)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Ceil)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Clip)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Concat)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Constant)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ConstantFill)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Conv)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ConvTranspose)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Crop)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, DepthToSpace)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Div)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Dropout)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Elu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Equal)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Exp)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, FC)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Flatten)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Floor)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GRU)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GRUUnit)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Gather)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Gemm)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GivenTensorFill)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GlobalAveragePool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GlobalLpPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, GlobalMaxPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Greater)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, HardSigmoid)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Hardmax)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Identity)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, If)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ImageScaler)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, InstanceNormalization)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LRN)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LSTM)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LeakyRelu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Less)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Log)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LogSoftmax)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Loop)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LoopIndexTensor)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LpNormalization)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, LpPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MatMul)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Max)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MaxPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MaxRoiPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Mean)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, MeanVarianceNormalization)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Min)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Mul)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Neg)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Not)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Or)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, PRelu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Pad)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ParametricSoftplus)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Pow)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RNN)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomNormal)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomNormalLike)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomUniform)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, RandomUniformLike)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Reciprocal)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceL1)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceL2)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceLogSum)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceLogSumExp)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceMax)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceMean)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceMin)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceProd)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceSum)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ReduceSumSquare)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Relu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Reshape)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Scale)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ScaledTanh)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Selu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Shape)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sigmoid)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Size)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Slice)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Softmax)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Softplus)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Softsign)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, SpaceToDepth)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Split)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sqrt)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Squeeze)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sub)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Sum)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Tanh)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, ThresholdedRelu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Tile)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, TopK)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Transpose)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Unsqueeze)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Upsample)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 1, Xor)>());
    }
};

// Forward declarations for ai.onnx version 2
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, GlobalLpPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, LpPool);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, Pad);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, Split);

// Iterate over schema from ai.onnx version 2
class OpSet_ONNX_DOMAIN_ver2 {
  public:
    static void ForEachSchema(std::function<void(OpSchema &&)> fn){
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, GlobalLpPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, LpPool)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, Pad)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 2, Split)>());
    }
};

// Forward declarations for ai.onnx version 3
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 3, GRU);

// Iterate over schema from ai.onnx version 3
class OpSet_ONNX_DOMAIN_ver3 {
  public:
    static void ForEachSchema(std::function<void(OpSchema &&)> fn){
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 3, GRU)>());
    }
};

// Forward declarations for ai.onnx version 4
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 4, Concat);

// Iterate over schema from ai.onnx version 4
class OpSet_ONNX_DOMAIN_ver4 {
  public:
    static void ForEachSchema(std::function<void(OpSchema &&)> fn){
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 4, Concat)>());
    }
};

// Forward declarations for ai.onnx version 5
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 5, Reshape);

// Iterate over schema from ai.onnx version 5
class OpSet_ONNX_DOMAIN_ver5 {
  public:
    static void ForEachSchema(std::function<void(OpSchema &&)> fn){
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 5, Reshape)>());
    }
};

// Forward declarations for ai.onnx version 6
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Abs);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Add);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, BatchNormalization);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Ceil);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Clip);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Div);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Dropout);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Elu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Exp);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Floor);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Gemm);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, HardSigmoid);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, InstanceNormalization);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, LeakyRelu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Log);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Max);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Mean);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Min);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Mul);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Neg);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, PRelu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Reciprocal);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Relu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Selu);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sigmoid);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sqrt);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sub);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sum);
class ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Tanh);

// Iterate over schema from ai.onnx version 6
class OpSet_ONNX_DOMAIN_ver6 {
  public:
    static void ForEachSchema(std::function<void(OpSchema &&)> fn){
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Abs)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Add)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, BatchNormalization)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Ceil)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Clip)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Div)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Dropout)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Elu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Exp)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Floor)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Gemm)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, HardSigmoid)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, InstanceNormalization)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, LeakyRelu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Log)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Max)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Mean)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Min)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Mul)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Neg)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, PRelu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Reciprocal)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Relu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Selu)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sigmoid)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sqrt)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sub)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Sum)>());
      fn(GetOpSchema<ONNX_OPERATOR_SCHEMA_CLASS_NAME(ONNX_DOMAIN, 6, Tanh)>());
    }
};

void RegisterOnnxOperatorSetSchema(){
  RegisterOpSetSchema<OpSet_ONNX_DOMAIN_ver1>();
  RegisterOpSetSchema<OpSet_ONNX_DOMAIN_ver2>();
  RegisterOpSetSchema<OpSet_ONNX_DOMAIN_ver3>();
  RegisterOpSetSchema<OpSet_ONNX_DOMAIN_ver4>();
  RegisterOpSetSchema<OpSet_ONNX_DOMAIN_ver5>();
  RegisterOpSetSchema<OpSet_ONNX_DOMAIN_ver6>();
  }
} // namespace ONNX_NAMESPACE
